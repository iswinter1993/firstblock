// source: shop/messages/shopMessageReq.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.noah.shop.message.shopReqMessageContent', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageFile', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageGroup', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageInit', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageInterval', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageList', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageMention', null, global);
goog.exportSymbol('proto.noah.shop.message.shopReqMessageSearch', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageFile.displayName = 'proto.noah.shop.message.shopReqMessageFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageMention = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageMention, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageMention.displayName = 'proto.noah.shop.message.shopReqMessageMention';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.noah.shop.message.shopReqMessageContent.repeatedFields_, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageContent.displayName = 'proto.noah.shop.message.shopReqMessageContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageList.displayName = 'proto.noah.shop.message.shopReqMessageList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageGroup.displayName = 'proto.noah.shop.message.shopReqMessageGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageInit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageInit.displayName = 'proto.noah.shop.message.shopReqMessageInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageInterval.displayName = 'proto.noah.shop.message.shopReqMessageInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.noah.shop.message.shopReqMessageSearch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.noah.shop.message.shopReqMessageSearch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.noah.shop.message.shopReqMessageSearch.displayName = 'proto.noah.shop.message.shopReqMessageSearch';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    originalFilename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    internalFilename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    extension: jspb.Message.getFieldWithDefault(msg, 4, ""),
    md5Base64: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mimeContentType: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageFile}
 */
proto.noah.shop.message.shopReqMessageFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageFile;
  return proto.noah.shop.message.shopReqMessageFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageFile}
 */
proto.noah.shop.message.shopReqMessageFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalFilename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalFilename(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5Base64(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInternalFilename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getExtension$();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMd5Base64();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMimeContentType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string original_filename = 1;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getOriginalFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setOriginalFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string internal_filename = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getInternalFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setInternalFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 file_size = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setFileSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string extension = 4;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string md5_base_64 = 5;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getMd5Base64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setMd5Base64 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mime_content_type = 6;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageFile.prototype.getMimeContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageFile} returns this
 */
proto.noah.shop.message.shopReqMessageFile.prototype.setMimeContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageMention.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageMention.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageMention} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageMention.toObject = function(includeInstance, msg) {
  var f, obj = {
    personId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    personType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageMention}
 */
proto.noah.shop.message.shopReqMessageMention.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageMention;
  return proto.noah.shop.message.shopReqMessageMention.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageMention} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageMention}
 */
proto.noah.shop.message.shopReqMessageMention.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageMention.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageMention.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageMention} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageMention.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPersonId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPersonType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 person_id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageMention.prototype.getPersonId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageMention} returns this
 */
proto.noah.shop.message.shopReqMessageMention.prototype.setPersonId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string person_type = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageMention.prototype.getPersonType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageMention} returns this
 */
proto.noah.shop.message.shopReqMessageMention.prototype.setPersonType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.noah.shop.message.shopReqMessageContent.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    simpleContent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    buyerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    staffId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    companyId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sender: jspb.Message.getFieldWithDefault(msg, 7, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 8, ""),
    fileList: jspb.Message.toObjectList(msg.getFileList(),
    proto.noah.shop.message.shopReqMessageFile.toObject, includeInstance),
    mentionList: jspb.Message.toObjectList(msg.getMentionList(),
    proto.noah.shop.message.shopReqMessageMention.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 11, ""),
    groupId: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageContent}
 */
proto.noah.shop.message.shopReqMessageContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageContent;
  return proto.noah.shop.message.shopReqMessageContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageContent}
 */
proto.noah.shop.message.shopReqMessageContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSimpleContent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuyerId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStaffId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 9:
      var value = new proto.noah.shop.message.shopReqMessageFile;
      reader.readMessage(value,proto.noah.shop.message.shopReqMessageFile.deserializeBinaryFromReader);
      msg.addFile(value);
      break;
    case 10:
      var value = new proto.noah.shop.message.shopReqMessageMention;
      reader.readMessage(value,proto.noah.shop.message.shopReqMessageMention.deserializeBinaryFromReader);
      msg.addMention(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSimpleContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBuyerId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStaffId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFileList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.noah.shop.message.shopReqMessageFile.serializeBinaryToWriter
    );
  }
  f = message.getMentionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.noah.shop.message.shopReqMessageMention.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string simple_content = 3;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getSimpleContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setSimpleContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 buyer_id = 4;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getBuyerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setBuyerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 staff_id = 5;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getStaffId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setStaffId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 company_id = 6;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string sender = 7;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string receiver = 8;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated shopReqMessageFile file = 9;
 * @return {!Array<!proto.noah.shop.message.shopReqMessageFile>}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getFileList = function() {
  return /** @type{!Array<!proto.noah.shop.message.shopReqMessageFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.noah.shop.message.shopReqMessageFile, 9));
};


/**
 * @param {!Array<!proto.noah.shop.message.shopReqMessageFile>} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
*/
proto.noah.shop.message.shopReqMessageContent.prototype.setFileList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.noah.shop.message.shopReqMessageFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.noah.shop.message.shopReqMessageFile}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.addFile = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.noah.shop.message.shopReqMessageFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.clearFileList = function() {
  return this.setFileList([]);
};


/**
 * repeated shopReqMessageMention mention = 10;
 * @return {!Array<!proto.noah.shop.message.shopReqMessageMention>}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getMentionList = function() {
  return /** @type{!Array<!proto.noah.shop.message.shopReqMessageMention>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.noah.shop.message.shopReqMessageMention, 10));
};


/**
 * @param {!Array<!proto.noah.shop.message.shopReqMessageMention>} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
*/
proto.noah.shop.message.shopReqMessageContent.prototype.setMentionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.noah.shop.message.shopReqMessageMention=} opt_value
 * @param {number=} opt_index
 * @return {!proto.noah.shop.message.shopReqMessageMention}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.addMention = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.noah.shop.message.shopReqMessageMention, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.clearMentionList = function() {
  return this.setMentionList([]);
};


/**
 * optional string type = 11;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 group_id = 12;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageContent.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageContent} returns this
 */
proto.noah.shop.message.shopReqMessageContent.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageList.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageList.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageList}
 */
proto.noah.shop.message.shopReqMessageList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageList;
  return proto.noah.shop.message.shopReqMessageList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageList}
 */
proto.noah.shop.message.shopReqMessageList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getUserType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 message_id = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string mode = 4;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 company_id = 5;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 user_id = 6;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string user_type = 7;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageList.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageList} returns this
 */
proto.noah.shop.message.shopReqMessageList.prototype.setUserType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    time: jspb.Message.getFieldWithDefault(msg, 5, ""),
    id: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageGroup}
 */
proto.noah.shop.message.shopReqMessageGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageGroup;
  return proto.noah.shop.message.shopReqMessageGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageGroup}
 */
proto.noah.shop.message.shopReqMessageGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_type = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setUserType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 company_id = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string group_id = 4;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string time = 5;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 id = 6;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string type = 7;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string search_value = 8;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageGroup} returns this
 */
proto.noah.shop.message.shopReqMessageGroup.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageInit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageInit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageInit.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageInit}
 */
proto.noah.shop.message.shopReqMessageInit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageInit;
  return proto.noah.shop.message.shopReqMessageInit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageInit}
 */
proto.noah.shop.message.shopReqMessageInit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageInit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageInit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInit} returns this
 */
proto.noah.shop.message.shopReqMessageInit.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_type = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInit} returns this
 */
proto.noah.shop.message.shopReqMessageInit.prototype.setUserType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 company_id = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInit} returns this
 */
proto.noah.shop.message.shopReqMessageInit.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string uuid = 4;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInit} returns this
 */
proto.noah.shop.message.shopReqMessageInit.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInit.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInit} returns this
 */
proto.noah.shop.message.shopReqMessageInit.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    messageId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: jspb.Message.getFieldWithDefault(msg, 6, ""),
    type: jspb.Message.getFieldWithDefault(msg, 7, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageInterval}
 */
proto.noah.shop.message.shopReqMessageInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageInterval;
  return proto.noah.shop.message.shopReqMessageInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageInterval}
 */
proto.noah.shop.message.shopReqMessageInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_type = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setUserType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 company_id = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 group_id = 4;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 message_id = 5;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string time = 6;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string type = 7;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string search_value = 8;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageInterval} returns this
 */
proto.noah.shop.message.shopReqMessageInterval.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.toObject = function(opt_includeInstance) {
  return proto.noah.shop.message.shopReqMessageSearch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.noah.shop.message.shopReqMessageSearch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageSearch.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    searchValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    range: jspb.Message.getFieldWithDefault(msg, 6, ""),
    count: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.noah.shop.message.shopReqMessageSearch}
 */
proto.noah.shop.message.shopReqMessageSearch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.noah.shop.message.shopReqMessageSearch;
  return proto.noah.shop.message.shopReqMessageSearch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.noah.shop.message.shopReqMessageSearch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.noah.shop.message.shopReqMessageSearch}
 */
proto.noah.shop.message.shopReqMessageSearch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRange(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.noah.shop.message.shopReqMessageSearch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.noah.shop.message.shopReqMessageSearch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.noah.shop.message.shopReqMessageSearch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRange();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_type = 2;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setUserType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 company_id = 3;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getCompanyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string search_value = 4;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string range = 6;
 * @return {string}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getRange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setRange = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 count = 7;
 * @return {number}
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.noah.shop.message.shopReqMessageSearch} returns this
 */
proto.noah.shop.message.shopReqMessageSearch.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


goog.object.extend(exports, proto.noah.shop.message);

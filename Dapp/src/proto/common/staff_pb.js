// source: common/staff.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.Staff', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Staff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Staff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Staff.displayName = 'proto.proto.Staff';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Staff.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Staff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Staff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Staff.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deleted: jspb.Message.getFieldWithDefault(msg, 7, 0),
    abilityViewTestData: jspb.Message.getFieldWithDefault(msg, 8, 0),
    title: jspb.Message.getFieldWithDefault(msg, 9, ""),
    location: jspb.Message.getFieldWithDefault(msg, 10, ""),
    resetCode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    oldOpType: jspb.Message.getFieldWithDefault(msg, 12, ""),
    oldId: jspb.Message.getFieldWithDefault(msg, 13, 0),
    timezone: jspb.Message.getFieldWithDefault(msg, 14, ""),
    language: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Staff}
 */
proto.proto.Staff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Staff;
  return proto.proto.Staff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Staff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Staff}
 */
proto.proto.Staff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeleted(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAbilityViewTestData(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setResetCode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldOpType(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOldId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Staff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Staff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Staff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Staff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeleted();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAbilityViewTestData();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getResetCode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOldOpType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOldId();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.Staff.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.proto.Staff.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.proto.Staff.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.proto.Staff.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.proto.Staff.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string phone = 6;
 * @return {string}
 */
proto.proto.Staff.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 deleted = 7;
 * @return {number}
 */
proto.proto.Staff.prototype.getDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setDeleted = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ability_view_test_data = 8;
 * @return {number}
 */
proto.proto.Staff.prototype.getAbilityViewTestData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setAbilityViewTestData = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.proto.Staff.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string location = 10;
 * @return {string}
 */
proto.proto.Staff.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string reset_code = 11;
 * @return {string}
 */
proto.proto.Staff.prototype.getResetCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setResetCode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string old_op_type = 12;
 * @return {string}
 */
proto.proto.Staff.prototype.getOldOpType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setOldOpType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int32 old_id = 13;
 * @return {number}
 */
proto.proto.Staff.prototype.getOldId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setOldId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string timezone = 14;
 * @return {string}
 */
proto.proto.Staff.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string language = 15;
 * @return {string}
 */
proto.proto.Staff.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Staff} returns this
 */
proto.proto.Staff.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


goog.object.extend(exports, proto.proto);
